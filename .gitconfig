[user]
        name = Creighton Leif
        email = creighton.leif@gmail.com
[rebase]
        autosquash = true
[http]
        sslVerify = false
[core]
        symlinks = true
        fscache = true
        autocrlf = input
[credential]
        helper = cache --timeout=86400
[alias]
        st = status
        co = checkout
        tagsbydate = for-each-ref --sort=-taggerdate --format='%(refname:short)' refs/tags
        previoustag = !sh -c 'git tagsbydate --count 2 | cut -f2 | sed -n 2p'
        lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
        markdownlog = log --color --pretty=format:'* %s %Cred%h%Creset - %C(bold blue)[%an](mailto:%ae)%Creset' --abbrev-commit --dense --no-merges --reverse
        releasenotes = !sh -c 'git markdownlog ...`git previoustag`'
        tree = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --decorate"
        fix = "commit --amend -C HEAD"
        di = "diff --color"
        undo = "reset --soft HEAD^"
        rod = rebase origin/develop
        rom = rebase origin/master
        cod = checkout develop
        com = checkout master
        change-commits=!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter "if [[ \"$`echo $VAR`\" = '$OLD' ]]; then export $VAR='$NEW'; fi" $@; }; f
[pull]
        rebase = true
[sequence]
        editor = rebase-editor
